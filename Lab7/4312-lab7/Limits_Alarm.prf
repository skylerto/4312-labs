(Limits_Alarm
 (correct_limits_alarm_fbd 0
  (correct_limits_alarm_fbd-1 nil 3656962645
   ("" (grind)
    (("1" (grind) (("1" (postpone) nil nil)) nil)
     ("2" (postpone) nil nil) ("3" (postpone) nil nil)
     ("4" (postpone) nil nil) ("5" (postpone) nil nil)
     ("6" (postpone) nil nil) ("7" (postpone) nil nil)
     ("8" (postpone) nil nil) ("9" (postpone) nil nil)
     ("10" (postpone) nil nil) ("11" (postpone) nil nil)
     ("12" (postpone) nil nil) ("13" (postpone) nil nil)
     ("14" (postpone) nil nil) ("15" (postpone) nil nil)
     ("16" (postpone) nil nil) ("17" (postpone) nil nil)
     ("18" (postpone) nil nil) ("19" (postpone) nil nil)
     ("20" (postpone) nil nil) ("21" (postpone) nil nil)
     ("22" (postpone) nil nil) ("23" (postpone) nil nil)
     ("24" (postpone) nil nil) ("25" (postpone) nil nil)
     ("26" (postpone) nil nil) ("27" (postpone) nil nil)
     ("28" (postpone) nil nil) ("29" (postpone) nil nil)
     ("30" (postpone) nil nil) ("31" (postpone) nil nil)
     ("32" (postpone) nil nil) ("33" (postpone) nil nil)
     ("34" (postpone) nil nil) ("35" (postpone) nil nil)
     ("36" (postpone) nil nil) ("37" (postpone) nil nil)
     ("38" (postpone) nil nil) ("39" (postpone) nil nil)
     ("40" (postpone) nil nil) ("41" (postpone) nil nil)
     ("42" (postpone) nil nil) ("43" (postpone) nil nil)
     ("44" (postpone) nil nil) ("45" (postpone) nil nil)
     ("46" (postpone) nil nil) ("47" (postpone) nil nil)
     ("48" (postpone) nil nil) ("49" (postpone) nil nil)
     ("50" (postpone) nil nil) ("51" (postpone) nil nil)
     ("52" (postpone) nil nil))
    nil)
   nil shostak))
 (req_entails_inv 0
  (req_entails_inv-1 nil 3656962622 ("" (grind) nil nil)
   ((DTIME type-eq-decl nil Time nil)
    (delta formal-const-decl "posreal" Limits_Alarm nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (env_1 const-decl "bool" Limits_Alarm nil)
    (high_alarm_req const-decl "bool" Limits_Alarm nil)
    (low_alarm_req const-decl "bool" Limits_Alarm nil)
    (env_2 const-decl "bool" Limits_Alarm nil)
    (gte_one const-decl "bool" Limits_Alarm nil)
    (limits_alarm_req const-decl "bool" Limits_Alarm nil)
    (no_simultaneous_alarms const-decl "bool" Limits_Alarm nil))
   shostak)))

