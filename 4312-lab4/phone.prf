(phone
 (AddPhone_TCC1 0
  (AddPhone_TCC1-1 nil 3653917094 ("" (subtype-tcc) nil nil) nil nil))
 (DelPhoneNum_TCC1 0
  (DelPhoneNum_TCC1-1 nil 3653917094 ("" (subtype-tcc) nil nil) nil
   nil))
 (FindAdd 0
  (FindAdd-1 nil 3653917095
   ("" (skeep)
    (("" (expand "UnusedPhoneNum")
      (("" (expand "member")
        (("" (expand "AddPhone")
          (("" (expand "FindPhone")
            (("" (expand "UnusedPhoneNum")
              (("" (iff)
                (("" (prop)
                  (("1" (inst?)
                    (("1" (inst?)
                      (("1" (expand "member")
                        (("1" (expand "FindPhone")
                          (("1" (assert)
                            (("1" (expand "add")
                              (("1" (postpone) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (postpone) nil nil) ("3" (postpone) nil nil)
                   ("4" (postpone) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (DelAdd 0
  (DelAdd-1 nil 3653917831
   ("" (skeep)
    (("" (expand "DelPhoneNum")
      (("" (expand "AddPhone")
        (("" (expand "UnusedPhoneNum")
          (("" (expand "FindPhone")
            (("" (expand "member")
              (("" (expand "remove")
                (("" (expand "member")
                  (("" (expand "add")
                    (("" (expand "member")
                      (("" (lift-if)
                        (("" (prop)
                          (("" (inst?)
                            (("" (assert)
                              ((""
                                (apply-extensionality)
                                ((""
                                  (lift-if)
                                  ((""
                                    (prop)
                                    ((""
                                      (assert)
                                      ((""
                                        (apply-extensionality)
                                        ((""
                                          (apply-extensionality 4)
                                          ((""
                                            (lift-if)
                                            ((""
                                              (iff)
                                              (("" (prop) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((DelPhoneNum const-decl "VB" phone nil)
    (UnusedPhoneNum const-decl "bool" phone nil)
    (member const-decl "bool" sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (setof type-eq-decl nil defined_types nil)
    (B type-eq-decl nil phone nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (set type-eq-decl nil sets nil)
    (disjoint? const-decl "bool" sets nil)
    (VB type-eq-decl nil phone nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (P type-decl nil phone nil)
    (boolean nonempty-type-decl nil booleans nil)
    (N type-decl nil phone nil) (add const-decl "(nonempty?)" sets nil)
    (remove const-decl "set" sets nil)
    (FindPhone const-decl "setof[P]" phone nil)
    (AddPhone const-decl "VB" phone nil))
   shostak)))

